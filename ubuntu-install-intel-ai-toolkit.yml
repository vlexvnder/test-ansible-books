---
- name: Install pre-requisite packages
  hosts: localhost
  connection: local
  tasks:
    - name: Install pre-requisite packages
      ansible.builtin.apt:
        pkg:
          - vim
          - python3-pip
          - gcc
          - g++
          - make
          - numactl
          - ca-certificates
          - curl
          - gnupg
        state: present
        update_cache: true

- name: Install Intel AI Toolkit
  hosts: localhost
  connection: local
  tasks:
    - name: Add Intel GPG key
      shell: wget -O- https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB | gpg --dearmor | sudo tee /usr/share/keyrings/oneapi-archive-keyring.gpg > /dev/null
      changed_when: false
    - name: Add Intel OneAPI repo
      shell: echo "deb [signed-by=/usr/share/keyrings/oneapi-archive-keyring.gpg] https://apt.repos.intel.com/oneapi all main" | sudo tee /etc/apt/sources.list.d/oneAPI.list
    - name: Install Intel AI kit and other packages
      ansible.builtin.apt:
        pkg:
          - intel-basekit
          - intel-aikit
        state: present
        update_cache: true

- name: Install Miniconda
  hosts: localhost
  connection: local
  tasks:
    - name: Download Miniconda
      shell: wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh
      args:
        creates: ~/miniconda.sh
    - name: Install Miniconda
      shell: bash ~/miniconda.sh -b -p $HOME/miniconda
      args:
        creates: $HOME/miniconda

- name: Set environment variables
  hosts: localhost
  connection: local
  tasks:
    - name: Add environment variable script to profile
      copy:
        dest: "/etc/profile.d/oneapi-env-vars.sh"
        content: |
          source /opt/intel/oneapi/setvars.sh

- name: Install requirements to run demo to demo user
  hosts: localhost
  connection: local

  vars:
    user_name: alexander_goldberg
    repo_url: https://github.com/oneapi-src/oneAPI-samples.git
    repo_dest: /home/{{ user_name }}/oneAPI-samples
    demo_folder: /home/{{ user_name }}/oneAPI-samples/AI-and-Analytics/Features-and-Functionality
  tasks:
    - name: Touch repo dest
      ansible.builtin.file:
        path: "{{ repo_dest }}"
        state: directory
    - name: Add script to run demo to home dir
      copy:
        dest: "{{ repo_dest }}/run_demo.sh"
        content: |
          #!/bin/bash
          git clone "{{ repo_url }}" 
          python -m pip install -r "{{ demo_folder }}/requirements.txt"
          python -m pip install transformers 
          conda create --name user_pytorch --clone pytorch
          conda activate user_pytorch
          python "{{ demo_folder }}/IntelPyTorch_InferenceOptimizations_AMX_BF16_INT8.py"
        mode: a+x

- name: Reboot server
  hosts: localhost
  connection: local
  tasks:
    - name: Run demo
      shell: reboot

